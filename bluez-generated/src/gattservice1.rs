// This code was autogenerated with `dbus-codegen-rust --file=specs/org.bluez.GattService1.xml --interfaces=org.bluez.GattService1 --client=nonblock --methodtype=none`, see https://github.com/diwic/dbus-rs
use dbus;
#[allow(unused_imports)]
use dbus::arg;
use dbus::nonblock;

pub trait OrgBluezGattService1 {
    fn uuid(&self) -> nonblock::MethodReply<String>;
    fn device(&self) -> nonblock::MethodReply<dbus::Path<'static>>;
    fn primary(&self) -> nonblock::MethodReply<bool>;
    fn includes(&self) -> nonblock::MethodReply<Vec<dbus::Path<'static>>>;
}

impl<'a, T: nonblock::NonblockReply, C: ::std::ops::Deref<Target = T>> OrgBluezGattService1
    for nonblock::Proxy<'a, C>
{
    fn uuid(&self) -> nonblock::MethodReply<String> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "org.bluez.GattService1",
            "UUID",
        )
    }

    fn device(&self) -> nonblock::MethodReply<dbus::Path<'static>> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "org.bluez.GattService1",
            "Device",
        )
    }

    fn primary(&self) -> nonblock::MethodReply<bool> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "org.bluez.GattService1",
            "Primary",
        )
    }

    fn includes(&self) -> nonblock::MethodReply<Vec<dbus::Path<'static>>> {
        <Self as nonblock::stdintf::org_freedesktop_dbus::Properties>::get(
            &self,
            "org.bluez.GattService1",
            "Includes",
        )
    }
}
